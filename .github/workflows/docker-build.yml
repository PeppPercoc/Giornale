name: Build and Deploy Docker Image

on:
  push:
    tags:
      - 'v*' # Esegue solo per i tag che iniziano con "v" (es. v1.0.0)

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract version from tag
        id: tag_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/giornale:${{ env.VERSION }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/giornale:${{ env.VERSION }}

      - name: Tag as latest and push
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/giornale:${{ env.VERSION }} ${{ secrets.DOCKER_USERNAME }}/giornale:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/giornale:latest

      - name: Send Telegram Notification
        run: |
          MESSAGE="Nuova release disponibile!  *Versione:* ${{ env.VERSION }}  *Docker Image:* pepppercoc/giornale:${{ env.VERSION }}  Scaricala da Docker Hub: [clicca qui](https://hub.docker.com/r/pepppercoc/giornale)"
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d parse_mode="MarkdownV2" \
          -d text="$MESSAGE"
        if: startsWith(github.ref, 'refs/tags/')
